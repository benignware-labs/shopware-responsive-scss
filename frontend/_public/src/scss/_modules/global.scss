/*
Global
==========================================
Defines the global styles of Shopware.

It contains the global modifier classes that help working with the Shopware elements and the typographic styles.

######Global modifier classes
Add a `is--` class to an element to easily change the properties.

`.is--rounded` - changes the border-radius to 3pxgi<br/>
`.is--block` - sets element to display: block<br/>
`.is--inline` - sets element to display: inline<br/>
`.is--inline-block` - sets element to display: inline-block<br/>
`.is--hidden` - sets element to display: none<br/>
`.is--invisible` - sets element to  visibility: none<br/>

`.is--align-left` - sets element to text-align: left;<br/>
`.is--align-right` - sets element to text-align: right<br/>
`.is--align-center` - sets element to text-align: center<br/>
`.is--underline` - sets element to text-decoration: underline<br/>
`.is--line-through` - sets element to text-decoration: line-through<br/>
`.is--uppercase` - sets element to text-transform: uppercase<br/>
`.is--strong` - sets element to font-weight: $font-bold-weight<br/>
`.is--bold` - sets element to font-weight: $font-bold-weight<br/>
`.is--italic` - sets element to font-style: italic<br/>
`.is--nowrap` - sets element to white-space: nowrap<br/>

`.is--dark` - changes color to $text-color-dark<br/>
`.is--light` - changes color to darken($gray-dark, 20%)<br/>
`.is--soft` - changes color to $gray-dark<br/>
*/

* {
    @include box-sizing();
}

    // Fix the body for off-canvas handling
html {
    width: 100%;
    height: 100%;

    &.no--scroll {
        position: relative;
        overflow: hidden;

        body {
            overflow: hidden;
        }
    }
}

body {
    @include unitize($font-size-base, 16, font-size);
    font-family: $font-base-stack;
    font-weight: $font-base-weight;
    color: $text-color;
    background: $body-bg;
    text-rendering: optimizeLegibility;
    -webkit-font-smoothing: antialiased;
}

    // All images should be responsive by default
img {
    display: block;
    max-width: 100%;
    max-height: 100%;
    height: auto;
}

a {
    color: $link-color;
    text-decoration: none;
}

ul {
    margin: 0;
    padding: 0;
}

    // Star rating
.product--rating {
    i[class^=icon] { color: $rating-star-color; }
    i.icon--star-empty { color: $border-color; }
}

    // Font
h1, h2, h3, h4, h5, h6 {
    @include unitize(line-height, 26);
    @include unitize-margin(28, 0, 10, 0);
    font-family: $font-headline-stack;
    font-weight: $font-bold-weight;
    color: $text-color-dark;
}

h1 {
    @include unitize($font-size-h1, 16, font-size);
    @include unitize(line-height, 28);
    @include unitize-margin(34, 0, 20, 0);
    color: $text-color-dark;
}

h2 {
    @include unitize($font-size-h2, 16, font-size);
}

h3 {
    @include unitize($font-size-h3, 16, font-size);
}

h4 {
    @include unitize($font-size-h4, 16, font-size);
}

h5 {
    @include unitize($font-size-h5, 16, font-size);
}

h6 {
    @include unitize($font-size-h6, 16, font-size);
}

p {
    @include unitize($font-size-base, 16, font-size);
    @include unitize(line-height, 24);
    @include unitize-margin(0, 0, 20, 0);
}

blockquote {
    @include unitize-padding(10, 10);
    @include border-radius();
    @include box-shadow(inset 0 0 3px 0 rgba(0, 0, 0, 0.2));
    background: $gray;
    text-align: left;
    margin: 0;
}

// Hide ajax loader by default
.ajax-loader { display: none }

// Global Modifier

// Sass doesn't allow for extending from within media-selectors for good reasons.
// So we're using mixins to include the modifiers
// FIXME: Use mixin as silent class factory to workaround the issue

@mixin is--rounded() {
  @include border-radius();
}

.is--rounded {
  @include is--rounded();
}

@mixin is--block() {
  display: block !important;
}

.is--block {
  @include is--block();
}

@mixin is--inline() {
  display: inline !important;
}

.is--inline {
  @include is--inline();
}

@mixin is--inline-block() {
  display: inline-block !important;
}

.is--inline-block {
  @include is--inline-block();
}

@mixin is--hidden() {
  display: none !important;
}

.is--hidden {
  @include is--hidden();
}

@mixin is--invisible() {
  visibility: hidden !important;
}

.is--invisible {
  @include is--invisible();
}

@mixin is--align-left() {
  text-align: left !important;
}

.is--align-left {
  @include is--align-left();
}

@mixin is--align-right() {
  text-align: right !important;
}

.is--align-right {
  @include is--align-right();
}

@mixin is--align-center() {
  text-align: center !important;
}

.is--align-center {
  @include is--align-center();
}

@mixin is--underline() {
  text-decoration: underline !important;
}

.is--underline {
  @include is--underline();
}

@mixin is--line-through() {
  text-decoration: line-through !important;
}

.is--line-through {
  @include is--line-through();
}

@mixin is--uppercase() {
  text-transform: uppercase !important;
}

.is--uppercase {
  @include is--uppercase();
}

@mixin is--strong() {
  font-weight: $font-bold-weight !important;
}

.is--strong {
  @include is--strong();
}

@mixin is--bold() {
  @include is--strong();
}

.is--bold {
  @include is--bold();
}

@mixin is--italic() {
  font-style: italic;
}

.is--italic {
  @include is--italic();
}

@mixin is--nowrap() {
  white-space: nowrap !important;
}

.is--nowrap {
  @include is--nowrap();
}

@mixin is--dark() {
  color: $text-color-dark !important;
}

.is--dark {
  @include is--dark();
}

@mixin is--light() {
  color: darken($gray-dark, 20%) !important;
}

.is--light {
  @include is--light();
}

@mixin is--soft() {
  color: $gray-dark !important;
}

.is--soft {
  @include is--soft();
}

@mixin is--fluid() {
  width: 100% !important;
}

.is--fluid {
  @include is--fluid();
}


.left { float: left; }
.right { float: right; }

::-moz-placeholder { color: $input-placeholder-color; }
::-webkit-input-placeholder { color: $input-placeholder-color; }
:-ms-input-placeholder { color: $input-placeholder-color; }

.page-wrap {
    @include unitize-min-width(320, 16);
}

.content-main,
.content--wrapper {
	@include clearfix();
}

.content-main--inner {
	@include unitize-padding(0, 10, 16);
	@include clearfix();
}

.content {
	width: 100%;
	float: left;
}

@media screen and(min-width: $tabletViewportWidth) {
    .content-main {
        @include box-shadow(0 0 4px 1px $border-color);

        &:not(.is--small) {
            @include unitize(min-height, 750);
        }
    }

    .content-main--inner {
        @include unitize-padding(0, 30, 16);
        width: 100%;
    }
}

@media screen and (min-width: $desktopViewportWidth) {
    .content-main {
        @include unitize(margin-top, 20);
        @include unitize(margin-bottom, 45);

        &:not(.is--small) {
            @include unitize(min-height, 700);
        }
    }

    .content-main--inner {
        @include unitize-padding(0, 50, 50, 50);
    }
}
